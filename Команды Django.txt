Django Python

cd .\директория\  --  зайти в директорию проекта
cd .\..\  -- выйти из директории

django-admin.exe startproject название проекта  -- создание проекта
python .\manage.py runserver  -- запуск сервера проекта

python .\manage.py startapp название приложения  -- создания приложения в проекте
	! Регистрация проложения в settings.py/ INSTALLED_APPS =['название_проекта.apps.Название_проектаConfig']

приложение\models.py  -- для создания таблицы в базе данных на основе класса
	class Название таблицы(models.Model):
		название поля = тип поля(см. Документацию)

		models.ForeignKey(User, on_delete=models.CASCADE)  -- Создание связей между моделями через класс
            models.CASCADE - если пользователь будет удален, то удалятся все задачи
            models.PROTECTED - запрещает удалять пользователя, пока у него есть задачи
            models.SET_NULL - задачи останутся в базе, даже при удалении пользователя, но значение в поле задачи изменится на NULL
            models.SET_DEFAULT - задачи останутся в базе, даже при удалении пользователя, но значение в поле задачи изменится на значение по умолчанию

pip install Pillow - установка плагина для models.ImageFild()

! После создания таблицы выполняем ее миграцию db
	python manage.py makemigrations  -- 1й шаг миграции
	python manage.py migrate  --  2й шаг миграции

python manage.py createsuperuser  -- создание суперпользователя

! Регистрация модели из db:
	from .models import Модель
	admin.site.register(Модель)

! Указания пути для сохранения медиа файлов settings.py:	
	MEDIA_URL = 'media/'
	MEDIA_ROOT = BASE_DIR / 'media'

! Просмотр медиа из кабинета суперюзера:
	urls.py/
		from django.conf.urls.static import static
		from django.conf import settings
		urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

!
	
